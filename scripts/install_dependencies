#!/bin/bash

set -e

rm -rf /tmp/codedeploy

rm -f /var/lib/dpkg/lock
rm -f /var/lib/apt/lists/lock
rm -f /var/cache/apt/archives/lock

id -u tomcat &>/dev/null || useradd tomcat

CATALINA_HOME=/opt/tomcat
TOMCAT_VERSION=8.5.29

# Tar file name
TOMCAT7_CORE_TAR_FILENAME="apache-tomcat-$TOMCAT_VERSION.tar.gz"
# Download URL for Tomcat7 core
TOMCAT7_CORE_DOWNLOAD_URL="https://archive.apache.org/dist/tomcat/tomcat-8/v$TOMCAT_VERSION/bin/$TOMCAT7_CORE_TAR_FILENAME"
# The top-level directory after unpacking the tar file
TOMCAT7_CORE_UNPACKED_DIRNAME="apache-tomcat-$TOMCAT_VERSION"

# Check whether there exists a valid instance
# of Tomcat7 installed at the specified directory
[[ -d $CATALINA_HOME ]] && { /etc/init.d/tomcat stop; } && {
    echo "Tomcat7 is already installed at $CATALINA_HOME. Skip reinstalling it."
    exit 0
}

# Clear install directory
if [ -d $CATALINA_HOME ]; then
    rm -rf $CATALINA_HOME
fi
mkdir -p $CATALINA_HOME

# Download the latest Tomcat8 version
cd /tmp
{ which wget; } || { apt-get install -y wget; }
wget $TOMCAT7_CORE_DOWNLOAD_URL
if [ -d /tmp/$TOMCAT7_CORE_UNPACKED_DIRNAME ]; then
    rm -rf /tmp/$TOMCAT7_CORE_UNPACKED_DIRNAME
fi
tar xzf $TOMCAT7_CORE_TAR_FILENAME

# Copy over to the CATALINA_HOME
cp -r /tmp/$TOMCAT7_CORE_UNPACKED_DIRNAME/* $CATALINA_HOME
chown tomcat. -R $CATALINA_HOME

# Install Java if not yet installed
{ which java; } || { apt-get install -y openjdk-8-jre-headless; }

# Create the service init.d script
cat > /etc/init.d/tomcat <<'EOF'
#!/bin/bash
#
# description: Apache Tomcat init script
# processname: tomcat  
# chkconfig: 234 20 80  
#
#
# Copyright (C) 2014 Miglen Evlogiev
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Initially forked from: gist.github.com/valotas/1000094
# Source: gist.github.com/miglen/5590986

 
#Location of JAVA_HOME (bin files)
export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
 
#Add Java binary files to PATH
export PATH=$JAVA_HOME/bin:$PATH
 
#CATALINA_HOME is the location of the bin files of Tomcat  
export CATALINA_HOME=/opt/tomcat  
 
#CATALINA_BASE is the location of the configuration files of this instance of Tomcat
export CATALINA_BASE=/opt/tomcat
 
#TOMCAT_USER is the default user of tomcat
export TOMCAT_USER=tomcat
 
#TOMCAT_USAGE is the message if this script is called without any options
TOMCAT_USAGE="Usage: $0 {\e[00;32mstart\e[00m|\e[00;31mstop\e[00m|\e[00;31mkill\e[00m|\e[00;32mstatus\e[00m|\e[00;31mrestart\e[00m}"
 
#SHUTDOWN_WAIT is wait time in seconds for java proccess to stop
SHUTDOWN_WAIT=20
 
tomcat_pid() {
	echo `ps -fe | grep $CATALINA_BASE | grep -v grep | tr -s " "|cut -d" " -f2`
}
 
start() {
  pid=$(tomcat_pid)
  if [ -n "$pid" ]
  then
    echo -e "\e[00;31mTomcat is already running (pid: $pid)\e[00m"
  else
    # Start tomcat
    echo -e "\e[00;32mStarting tomcat\e[00m"
    
    $CATALINA_HOME/bin/startup.sh
  fi
  return 0
}
 
status(){
	pid=$(tomcat_pid)
	if [ -n "$pid" ]
	then 
		echo -e "\e[00;32mTomcat is running with pid: $pid\e[00m"
	else
		echo -e "\e[00;31mTomcat is not running\e[00m"
	return 3
	fi
}

terminate() {
	echo -e "\e[00;31mTerminating Tomcat\e[00m"
	kill -9 $(tomcat_pid)
}

stop() {
	pid=$(tomcat_pid)
	if [ -n "$pid" ]
	then
		echo -e "\e[00;31mStoping Tomcat\e[00m"
        sh $CATALINA_HOME/bin/shutdown.sh
 		let kwait=$SHUTDOWN_WAIT
		count=0;
		until [ `ps -p $pid | grep -c $pid` = '0' ] || [ $count -gt $kwait ]
		do
			echo -n -e "\n\e[00;31mwaiting for processes to exit\e[00m";
			sleep 1
			let count=$count+1;
		done
 
	if [ $count -gt $kwait ]; then
		echo -n -e "\n\e[00;31mkilling processes didn't stop after $SHUTDOWN_WAIT seconds\e[00m"
		terminate
    	fi
  	else
		echo -e "\e[00;31mTomcat is not running\e[00m"
	fi
 	return 0
}
 
user_exists(){
        if id -u $1 >/dev/null 2>&1; then
        echo "1"
        else
                echo "0"
        fi
}
 
case $1 in
	start)
	  start
	;;
	stop)  
	  stop
	;;
	restart)
	  stop
	  start
	;;
	status)
		status
		exit $?  
	;;
	kill)
		terminate
	;;		
	*)
		echo -e $TOMCAT_USAGE
	;;
esac    
exit 0
EOF

# Change permission mode for the service script
chmod 755 /etc/init.d/tomcat

